plugins {
    id 'org.jetbrains.intellij' version '1.3.0'
    id 'java'
    id 'idea'
    id 'jacoco'
}

// Add plugin group and version
group 'com.dubreuia'
version '2.3.1'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
compileJava.options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"

// Add build script repository to maven central
repositories {
    mavenCentral()
}

// Add dependencies to test, junit5 api (annotations) and engine (runtime)
dependencies {
    testImplementation 'org.assertj:assertj-core:3.21.0',
            platform('org.junit:junit-bom:5.8.2'),
            'org.junit.jupiter:junit-jupiter-api',
            'org.junit.jupiter:junit-jupiter-params',
            'org.junit.jupiter:junit-jupiter-engine'
}

// Add intellij task configuration for base intellij version (minimum compatibility)
// This needs to fit the tag <idea-version since-build="xxx"> in plugin.xml
// See https://www.jetbrains.com/intellij-repository/snapshots
// See https://www.jetbrains.com/intellij-repository/releases
intellij {
    setVersion('2021.3')
    plugins = ['java', 'coverage']
    // Do not touch the plugin.xml file
    pluginName = 'Save Actions'
    updateSinceUntilBuild = false
}

patchPluginXml {
    sinceBuild = '212'
    setVersion(project.getVersion())
}

// Activate junit since gradle 4.7
test {
    useJUnitPlatform()
}

// Add resources directory because intellij test framework checks there for test resources (instead of build/resources)
sourceSets {
    test.output.resourcesDir = "build/classes/java/resources"
}

// Add jacoco test report for codecov
jacocoTestReport {
    reports {
        xml.required = true
        html.required = false
    }
}

wrapper() {
    gradleVersion = '7.3'
}